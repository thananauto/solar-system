name: Solar System Workflow

on: 
  workflow_dispatch:
  pull_request: 
    types: [ opened ]
    branches: 
      - master
    
  push:
    branches:
      - main
      - 'feature/*'
    tags:
      - 'v*'


env:
  MONGO_URI: ${{ vars.MONGO_URI }}
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}  



jobs:
    unit-testing:
       # strategy:

        #    matrix:
        #     node-version: ['18', '19', '20']
        #     os: [ubuntu-latest, windows-latest ]

        name: Unit Testing
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v3
          with:
            node-version: 19
    
        - name: Install Dependencies
          run: npm install
         
        - name: node cached
          id: cache
          uses: actions/cache@v4
          with:
            path: node_modules
            key: ${{ runner.os }}-${{ hashFiles('package-lock.json')}}
            
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          uses: actions/upload-artifact@v3
          with:
            name: Mocha-Test-Result
            path: test-results.xml


    code-coverage:
        permissions:
          contents: write
          pull-requests: write
          repository-projects: write

        name: code coverage
        runs-on: ubuntu-latest
        steps:
       

        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v3
          with:
            node-version: 19

        - name: node cached
          id: cache
          uses: actions/cache@v4
          with:
            path: node_modules
            key: ${{ runner.os }}-${{ hashFiles('package-lock.json')}}

        - name: Install Dependencies
          run: npm install
    
        - name: code coverage
          id: coverage
          continue-on-error: true
          run: npm run coverage
            
        - name: Code Coverage Summary Report
          uses: irongut/CodeCoverageSummary@v1.3.0
          with:
            filename: coverage/cobertura-coverage.xml 
            output: both  
            badge: true
            indicators: true
           

        - name: Archive Code Coverage Result
          if: always()
          uses: actions/upload-artifact@v3
          with:
            name: Code coverage result
            path: coverage 

         
        - name: modfied the report
          if: ${{ steps.coverage.conclusion == 'success'}}
          id: badge
          run: |
            file=$(cat code-coverage-results.txt)

            for line in $file
            do
                newline='![Coverage Report]('$line')'
                echo -E  $newline
                echo "current_badge=$newline" >> "$GITHUB_OUTPUT"
                break
            done
          shell: bash    

        - name: Add comment
          if: always()
         
          uses: mshick/add-pr-comment@v2
          with:
            message: |
              **Status**  ${{ steps.badge.outputs.current_badge }}
               
           
            message-failure: |
              Workflow failed
        
    deploy:
      permissions: 
        packages: write
        contents: write
      
      env: 
        image: solar-system
     # needs: [code-coverage, unit-testing]
      name: Deploy
      runs-on: ubuntu-latest
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
               ${{ vars.DOCKER_USER_NAME }}/solar-system
               ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
     
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USER_NAME }}
          password: ${{ secrets.DOCKER_PWD }}

      - name: Build Docker image
        if: ${{ github.ref_type == 'tag' }}
        uses: docker/build-push-action@v5
        with:
            context: .
            push: false
            tags: |
                ${{ steps.meta.outputs.tags }}
                
      - name: Test a Docker images
        if: ${{ github.ref_type == 'tag' }}
        run: |
            export version=$(echo ${{ github.ref_name }}  | tr -d v)
            docker run --name solar-system -d \
            -e MONGO_URI=${{ env.MONGO_URI }} \
            -e MONGO_USERNAME=${{ env.MONGO_USERNAME }} \
            -e MONGO_PASSWORD=${{ env.MONGO_PASSWORD }} \
            ${{ vars.DOCKER_USER_NAME }}/solar-system:$version
           
      - name: push Docker image
        if: ${{ github.ref_type == 'tag' }}
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
              ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}